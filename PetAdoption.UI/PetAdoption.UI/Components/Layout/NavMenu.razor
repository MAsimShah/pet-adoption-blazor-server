@inject CustomAuthStateProvider AuthState
@inject NavigationManager _Naivigation
@inject IConfiguration Configuration

<!-- Inline horizontal navigation -->
<MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
    <MudNavLink Href="/">Home</MudNavLink>
    <MudNavLink Href="/pets">Pets</MudNavLink>
    <MudNavLink Href="/requests">Adoptions</MudNavLink>
    @if (IsAdmin)
    {
        <MudNavLink Href="/users">Users</MudNavLink>
    }

    <AuthorizeView>
        <Authorized>
            <MudMenu>
                <ActivatorContent>
                    <MudAvatar>
                        <MudImage Src="@ProfileImage" />
                    </MudAvatar>
                </ActivatorContent>
                <ChildContent>
                    <MudMenuItem Label="Profile" />
                    <MudMenuItem Label="Logout" OnClick="Logout" />
                </ChildContent>
            </MudMenu>
        </Authorized>
        <NotAuthorized>
            <MudButton Variant="Variant.Filled" Size="Size.Medium" Color="Color.Tertiary" OnClick="LoginPage">Login</MudButton>
        </NotAuthorized>
    </AuthorizeView>
</MudStack>

@code {
    private string ProfileImage { get; set; }
    private bool IsAdmin { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthState.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            var imageUrl = user.FindFirst("ProfileImage")?.Value;

            if (string.IsNullOrEmpty(imageUrl))
            {
                ProfileImage = Configuration["DefaultProfileImage"];
            }
            else
            {
                ProfileImage = Configuration["BlazorApiUrl"] + imageUrl;
            }

            IsAdmin = user?.IsInRole("Admin") ?? false;
        }
    }

    private void LoginPage()
    {
        _Naivigation.NavigateTo("/", true);
    }

    private async Task Logout()
    {
        await AuthState.MarkUserAsLoggedOut();
        _Naivigation.NavigateTo("/", true);
    }
}
